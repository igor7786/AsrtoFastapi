version: "3.8"

services:
  # FastAPI application 1
  app1:
    build:
      context: .
      dockerfile: ./backend/fastapi-app.dockerfile
    image: my-python-app
    container_name: my-python-app1-container
    volumes:
      - ./backend/app_db:/backend/app_db  # Shared database
      - ./backend/app_main:/backend/app_main:ro  # Read-only codebase
    networks:
      - my_network  # Use the custom network
    dns:
      - 8.8.8.8  # Use Google Public DNS
#    restart: always

  # FastAPI application 2
  app2:
    build:
      context: .
      dockerfile: ./backend/fastapi-app.dockerfile
    image: my-python-app
    container_name: my-python-app2-container
    volumes:
      - ./backend/app_db:/backend/app_db
      - ./backend/app_main:/backend/app_main:ro
    networks:
      - my_network  # Use the custom network
    dns:
      - 8.8.8.8  # Use Google Public DNS
    restart: always

  # FastAPI application 3
  app3:
    build:
      context: .
      dockerfile: ./backend/fastapi-app.dockerfile
    image: my-python-app
    container_name: my-python-app3-container
    volumes:
      - ./backend/app_db:/backend/app_db
      - ./backend/app_main:/backend/app_main:ro
    networks:
      - my_network  # Use the custom network
    dns:
      - 8.8.8.8  # Use Google Public DNS
    restart: always

  # My Astro app (Node.js app)
  astro-app:
    build:
      context: .
      dockerfile: ./frontend/astro-app.dockerfile  # Ensure this is the correct path to your Dockerfile
    container_name: my-astro-app-container
    volumes:
      - ./frontend:/frontend  # Mount the local frontend directory to the container for live updates
    depends_on:
      - app1
      - app2
      - app3
    networks:
      - my_network
    dns:
      - 8.8.8.8  # Use Google Public DNS
    restart: always

  # Nginx web server (acting as a reverse proxy)
  web:
    build:
      context: .
      dockerfile: nginx/nginx-app.dockerfile
    image: my-nginx
    container_name: my-nginx-container
    ports:
      - "80:80"  # HTTP
      - "443:443"  # HTTPS
    depends_on:
      - astro-app  # Uncommented to ensure Nginx can proxy requests to the Astro app
    networks:
      - my_network  # Use the custom network
    dns:
      - 8.8.8.8  # Use Google Public DNS
    restart: always

# Define the shared network between all containers
networks:
  my_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.1.0/24
          gateway: 192.168.1.1

# Define the volume shared for database persistence
volumes:
  app_db:
    driver: local