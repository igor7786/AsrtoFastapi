user nginx;

# Defines the number of worker processes. Generally, it should match the number of CPU cores.
worker_processes auto;

# Binds worker processes to the sets of CPUs.
worker_cpu_affinity auto;

# Change the default thread pool settings
thread_pool default threads=12 max_queue=50000;

# Limit on the maximum number of open files (RLIMIT_NOFILE) for worker processes.
worker_rlimit_nofile 300000;

# Logging configuration.
error_log /var/log/nginx/error.log notice;

# Defines a file that will store the process ID of the main process.
pid /var/run/nginx.pid;

events {
# Maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 50000;
    # Serve many clients each thread (Linux only)
    use epoll;

    # Accept as many connections as possible. If it is disabled, a worker process will accept one new connection at a time.
    multi_accept on;
}

http {
    # Global configurations and optimizations
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    types_hash_bucket_size 512;
    proxy_headers_hash_max_size 1024;
    proxy_headers_hash_bucket_size 128;
    # Increase the number of HTTP/2 streams
    http2_max_concurrent_streams 20000;

    #Copies data between one FD and other from within the kernel
    # faster than read() + write()
    sendfile on;

    # Use the default thread pool for asynchronous file I/O
    aio threads;

    # Only use AIO is used for when larger than or equal to this size
    directio 6m;

    # Send headers in one piece, it is better than sending them one by one
    tcp_nopush on;

    # Don't buffer data sent, good for small data bursts in real time
    tcp_nodelay on;

    # Disable logging if a file can't be found
    log_not_found off;

    # Server will close connection after this time
    keepalive_timeout 30000;

    # Max size of types hash tables (processing static sets of data. eg. server names, map directives or mime types)
    types_hash_max_size 4096;

    # Max allowed size of the client request body
    client_max_body_size 250M;

    # If the request body size is more than the buffer size, then the entire (or partial)
    # request body is written into a temporary file
    client_body_buffer_size 512k;

    # Request timed out
    client_body_timeout 300s;

    # Allow the server to close connection on non responding client, this will free up memory
    reset_timedout_connection on;

    # Include MIME (Multipurpose Internet Mail Extensions) types.
    include mime.types;

    # Defines the default MIME type of a response
    default_type application/octet-stream;

    log_format quic '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" "$http3"';

    access_log logs/access.log quic;

    # Enabled compression using the ‚Äúgzip‚Äù method.
    gzip on;
    gzip_proxied expired no-cache no-store private auth;
    # Disables gzipping of responses for requests with ‚ÄúUser-Agent‚Äù header fields matching any of the specified regular expressions.
    gzip_disable msie6;

    # Enables inserting the ‚ÄúVary: Accept-Encoding‚Äù response header field.
    gzip_vary on;

    # Sets a gzip compression level of a response. Acceptable values are in the range from 1 to 9.
    gzip_comp_level 3;

    # Sets the minimum length of a response that will be gzipped.
    gzip_min_length 256;

    # Sets the number and size of buffers used to compress a response.
    gzip_buffers 16 8k;

    # Enables compression for all proxied requests.
    gzip_proxied any;

    # Enables gzipping of responses for the specified MIME types in addition to ‚Äútext/html‚Äù.
    gzip_types
    text/css
    text/plain
    text/javascript
    text/cache-manifest
    text/vcard
    text/vnd.rim.location.xloc
    text/vtt
    text/x-component
    text/x-cross-domain-policy
    application/javascript
    application/json
    application/x-javascript
    application/ld+json
    application/xml
    application/xml+rss
    application/xhtml+xml
    application/x-font-ttf
    application/x-font-opentype
    application/vnd.ms-fontobject
    application/manifest+json
    application/rss+xml
    application/atom_xml
    application/vnd.geo+json
    application/x-web-app-manifest+json
    image/svg+xml
    image/x-icon
    image/bmp
    font/opentype;
    ######CLUSTERS######

    upstream fastapi_cluster {
        least_conn;
        server app1:8080 max_fails=3 fail_timeout=10s;
        server app2:8080 max_fails=3 fail_timeout=10s;
        server app3:8080 max_fails=3 fail_timeout=10s;
        #server 127.0.0.1:8001 max_fails=3 fail_timeout=3s;

    }
    upstream mcp_cluster {
        least_conn;
        server app1:8080 max_fails=3 fail_timeout=10s;
        #server 127.0.0.1:8001 max_fails=3 fail_timeout=3s;

    }
    upstream astro-cluster {
        least_conn;
        server astro-app:4321 max_fails=3 fail_timeout=10s;
    }
    upstream n8n-cluster {
        least_conn;
        server n8n:5678 max_fails=3 fail_timeout=10s;

    }
    upstream portainer-cluster {
        least_conn;
        server portainer:9000 max_fails=3 fail_timeout=10s;
    }
    # Global rate limiting zone
    #limit_req_zone $binary_remote_addr zone=mylimit:10m rate=5r/s;

    #######PROXY######
    ######DOMAIN######
    #! Redirect HTTP to HTTPS
    server {
        listen 80;
        listen [::]:80;
        server_name igorfastapi.co.uk www.igorfastapi.co.uk 127.0.0.1 localhost ;

        # Redirect all HTTP traffic to HTTPS
        return 301 https://igorfastapi.co.uk$request_uri;
    }
    server {
        listen 4321;
        listen [::]:4321;
        server_name igorfastapi.co.uk www.igorfastapi.co.uk localhost 192.168.1.7;

        return 301 https://igorfastapi.co.uk$request_uri;
    }

    server {
        listen 9000;
        listen [::]:9000;
        server_name igorfastapi.co.uk www.igorfastapi.co.uk 127.0.0.1 localhost;

        location / {
            return 301 https://igorfastapi.co.uk/portainer$request_uri;
        }
    }
    server {
        listen 5678;
        listen [::]:5678;
        server_name n8n.igorfastapi.co.uk www.n8n.igorfastapi.co.uk loacalhost;

        return 301 https://n8n.igorfastapi.co.uk$request_uri;
    }

    # HTTPS
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name 127.0.0.1 172.18.0.4 192.168.102.210 192.168.0.39 192.168.0.71 localhost;

        ssl_certificate /etc/nginx/ssl/full_chain.pem;
        ssl_certificate_key /etc/nginx/ssl/_.igorfastapi.co.uk_private_key.key;

        return 301 https://igorfastapi.co.uk$request_uri;  # Correct redirect
    }
    # HTTPS/2 and HTTPS/3 for igorfastapi.co.uk
    server {
        # Listen for HTTP/2 on port 443 (TCP)
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;
        # Listen for HTTP/3 on port 443 (QUIC)
        listen 443 quic;
        listen [::]:443 quic;

        # Enable HTTP/3
        http3 on;

        keepalive_requests 20000;
        http2_max_concurrent_streams 20000;
        server_name igorfastapi.co.uk www.igorfastapi.co.uk 127.0.0.1 localhost;

        #SSL certificate and private key
        ssl_certificate /etc/nginx/ssl/full_chain.pem;
        ssl_certificate_key /etc/nginx/ssl/_.igorfastapi.co.uk_private_key.key;

        # SSL settings for improved security
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305';

        ssl_prefer_server_ciphers on;
         # Enable QUIC and HTTP/3
        ssl_early_data on;
        add_header Alt-Svc 'h3=":$server_port"; ma=86400';

        # SSL session settings
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;

        #! üîí Security Headers
        # Add HTTP Strict Transport Security (HSTS) header (optional but recommended)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload;" always;
        # Prevent MIME type sniffing
        add_header X-Content-Type-Options "nosniff";
        # Prevent clickjacking
        add_header X-Frame-Options "DENY";
        # Prevent XSS in older browsers
        add_header X-XSS-Protection "1; mode=block";
        # Referrer Policy ‚Äî limits referrer info sent to other sites
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        # Prevent MIME type sniffing
        add_header Expect-CT 'max-age=86400, enforce';
        # Permissions Policy ‚Äî restrict browser features
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), fullscreen=*, payment=()";

        # üß± Optional but recommended
        # Content Security Policy (CSP) ‚Äî customize to your app
        #add_header Content-Security-Policy "default-src 'self'; script-src 'self'; object-src 'none'; frame-ancestors 'none'; upgrade-insecure-requests;" always;
        #add_header Content-Security-Policy "default-src 'self'; style-src 'self'
        #'sha256-ZPrZBKBS5cd1mau7c8Brhei2ETPpHHXbHlBWH3osS2M=';";
        #add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline';";
        #add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval';
        #connect-src 'self'; img-src 'self' data:; style-src 'self' 'unsafe-inline'; font-src 'self'; frame-ancestors
        #'none'; upgrade-insecure-requests;" always;

        # COOP/COEP/Corp (for shared memory / web security)
        add_header Cross-Origin-Resource-Policy "same-origin" always;
        # for https://cdn
        add_header Cross-Origin-Embedder-Policy "require-corp" always;
        add_header Cross-Origin-Opener-Policy "same-origin" always;
        # Disable .env, backups, hidden files access for production
#         location ~ /\.(?!well-known).* {
#             deny all;
#         }
        # Deny access to sensitive hidden files, but allow .vite and .well-known
        location ~ /\.(env|git|htaccess|bash|npmrc) {
        deny all;
        }
        # Prevents brute-force and abuse add to location limit_req zone=mylimit burst=10 nodelay;


        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;

        # Proxy settings to forward requests to FastAPI cluster
        location /api/ {
            # required for browsers to direct them to quic port
            proxy_pass http://fastapi_cluster/api/;
            proxy_cache off;
            proxy_http_version 1.1;           # Ensure HTTP/1.1 for streaming
            proxy_set_header Connection "";    # Prevent connection closure issues
            # Standard headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Port 443;# Enable chunked encoding
        }
         # Forward FastAPI documentation (Swagger UI & ReDoc)
        location /docs {
            proxy_pass http://fastapi_cluster/docs;
            # Standard headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Port 443;# Enable chunked encoding
        }

        location /redoc {
            proxy_pass http://fastapi_cluster/redoc;
            # Standard headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Port 443;# Enable chunked encoding
        }
        location /mcp {
             # required for browsers to direct them to quic port
            proxy_pass http://mcp_cluster/mcp;
            proxy_http_version 1.1;            # Ensure HTTP/1.1 for streaming
            proxy_set_header Connection "";    # Prevent connection closure issues
            proxy_buffering off;               # Disable buffering for real-time streaming
            chunked_transfer_encoding on;
            # Standard headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-port 443;
        }
        location /openapi.json {
            proxy_pass http://fastapi_cluster/openapi.json;  # Assuming Astro app runs on port 4321
            # Standard headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-port 443;
        }
        # Streaming API Endpoint (StreamingResponse)
        location /api/stream/ {
            proxy_pass http://fastapi_cluster/api/stream/;
            proxy_http_version 1.1;            # Ensure HTTP/1.1 for streaming
            proxy_set_header Connection "";    # Prevent connection closure issues
            proxy_buffering off;               # Disable buffering for real-time streaming
            chunked_transfer_encoding on;

            # Standard headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-port 443;
        }
        # Proxy settings to forward requests to Astro app (serve the front-end)
        location / {
            proxy_pass http://astro-cluster/;
            proxy_http_version 1.1;

            # Limit request rate
            #limit_req zone=mylimit burst=10 nodelay;

            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Standard headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-port 443;

        }
        location /chat {
            proxy_pass http://astro-cluster/chat;
            proxy_http_version 1.1;            # Ensure HTTP/1.1 for streaming
            proxy_set_header Connection "";    # Prevent connection closure issues
            proxy_buffering off;               # Disable buffering for real-time streaming
            chunked_transfer_encoding on;      # Enable chunked encoding
            # Standard headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-port 443;

        }


    }

    ######SUBDOMAINS######
    # Redirect HTTP to HTTPS for subdomains


    #HTTP/2 and HTTP/3 for n8n.igorfastapi.co.uk
    server {
        # Listen for HTTP/2 on port 443 (TCP)
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;
        # Listen for HTTP/3 on port 443 (QUIC)
        listen 443 quic;
        listen [::]:443 quic;

        # Enable HTTP/3
        http3 on;


        keepalive_requests 20000;
        http2_max_concurrent_streams 20000;
        server_name n8n.igorfastapi.co.uk www.n8n.igorfastapi.co.uk;

        #SSL certificate and private key
        ssl_certificate /etc/nginx/ssl/full_chain.pem;
        ssl_certificate_key /etc/nginx/ssl/_.igorfastapi.co.uk_private_key.key;

        # SSL settings for improved security
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305';

        ssl_prefer_server_ciphers on;
         # Enable QUIC and HTTP/3
        ssl_early_data on;
        add_header Alt-Svc 'h3=":$server_port"; ma=86400';

        # SSL session settings
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;

        #! üîí Security Headers
        # Add HTTP Strict Transport Security (HSTS) header (optional but recommended)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload;" always;
        # Prevent MIME type sniffing
        add_header X-Content-Type-Options "nosniff";
        # Prevent clickjacking
        add_header X-Frame-Options "DENY";
        # Prevent XSS in older browsers
        add_header X-XSS-Protection "1; mode=block";
        # Referrer Policy ‚Äî limits referrer info sent to other sites
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        # Prevent MIME type sniffing
        add_header Expect-CT 'max-age=86400, enforce';
        # Permissions Policy ‚Äî restrict browser features
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), fullscreen=*, payment=()";

        # üß± Optional but recommended
        # Content Security Policy (CSP) ‚Äî customize to your app
        #add_header Content-Security-Policy "default-src 'self'; script-src 'self'; object-src 'none'; frame-ancestors 'none'; upgrade-insecure-requests;" always;
        #add_header Content-Security-Policy "default-src 'self'; style-src 'self'
        #'sha256-ZPrZBKBS5cd1mau7c8Brhei2ETPpHHXbHlBWH3osS2M=';";
        #add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline';";
        #add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval';
        #connect-src 'self'; img-src 'self' data:; style-src 'self' 'unsafe-inline'; font-src 'self'; frame-ancestors
        #'none'; upgrade-insecure-requests;" always;

        # COOP/COEP/Corp (for shared memory / web security)
        add_header Cross-Origin-Resource-Policy "same-origin" always;
        # for https://cdn
        add_header Cross-Origin-Embedder-Policy "unsafe-none" always;
        add_header Cross-Origin-Opener-Policy "same-origin" always;
        # Disable .env, backups, hidden files access for production
#         location ~ /\.(?!well-known).* {
#             deny all;
#         }
        # Deny access to sensitive hidden files, but allow .vite and .well-known
        location ~ /\.(env|git|htaccess|bash|npmrc) {
        deny all;
        }
        # Prevents brute-force and abuse add to location limit_req zone=mylimit burst=10 nodelay;
        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;

        # n8n
        location / {
          # required for browsers to direct them to quic port
          proxy_pass http://n8n-cluster/;  # ‚ö†Ô∏è Note the `/` at the end
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          # Standard headers
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto https;
          proxy_set_header X-Forwarded-port 443;
        }
        location /portainer/ {
            proxy_pass http://portainer-cluster/;
            proxy_http_version 1.1;            # Ensure HTTP/1.1 for streaming
            proxy_set_header Connection "";    # Prevent connection closure issues
            proxy_buffering off;               # Disable buffering for real-time streaming
            chunked_transfer_encoding on;      # Enable chunked encoding
            # Standard headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-port 443;
        }
    }
}
