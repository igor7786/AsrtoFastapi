# Load the JavaScript module
load_module /usr/lib/nginx/modules/ngx_http_js_module.so;

worker_processes 4;
worker_rlimit_nofile 65535;

events {
    worker_connections 65535;
}

http {
    # Global configurations and optimizations
    types_hash_max_size 4096;
    types_hash_bucket_size 512;
    include mime.types;
    default_type application/octet-stream;

    # Enable gzip compression
    gzip on;
    gzip_min_length 1000;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_vary on;



    # Load the JS module for IP masking
    js_import mask_ip_uri.js;  # Ensure the path is correct

    # Define custom log format with masked IP
    log_format masked '$remote_addr_masked - $remote_user [$time_local] '
                  '"$request" $status $body_bytes_sent '
                  '"$http_referer" "$http_user_agent"';


    # Define a variable to store the masked IP address
    js_set $remote_addr_masked mask_ip_uri.maskRemoteAddress;

    upstream fastapi_cluster {
        least_conn;
        server app1:8000 max_fails=3 fail_timeout=10s;
        server app2:8000 max_fails=3 fail_timeout=10s;
        server app3:8000 max_fails=3 fail_timeout=10s;
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name igorfastapi.co.uk www.igorfastapi.co.uk 127.0.0.1 localhost;

        # Redirect all HTTP traffic to HTTPS
        return 301 https://igorfastapi.co.uk$request_uri;
    }
    server {
        listen 443 ssl;
        server_name  127.0.0.1 localhost;

        # SSL certificate configuration
        ssl_certificate /etc/nginx/ssl/full_chain.pem;
        ssl_certificate_key /etc/nginx/ssl/_.igorfastapi.co.uk_private_key.key;

        # Redirect requests from the IP address to the correct domain
        return 301 https://igorfastapi.co.uk$request_uri;
    }

    # HTTPS server block
    server {
        listen 443 ssl;
        server_name igorfastapi.co.uk www.igorfastapi.co.uk 127.0.0.1 localhost;

        #SSL certificate and private key
        ssl_certificate /etc/nginx/ssl/full_chain.pem;
        ssl_certificate_key /etc/nginx/ssl/_.igorfastapi.co.uk_private_key.key;

        # SSL settings for improved security
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384';
        ssl_prefer_server_ciphers on;

        # SSL session settings
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;

        # Add HTTP Strict Transport Security (HSTS) header (optional but recommended)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Proxy settings to forward requests to FastAPI cluster
        location /api/ {
            proxy_cache off;
            proxy_pass http://fastapi_cluster/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
         # Forward FastAPI documentation (Swagger UI & ReDoc)
        location /docs {
            proxy_pass http://fastapi_cluster/docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /redoc {
            proxy_pass http://fastapi_cluster/redoc;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /openapi.json {
            proxy_pass http://fastapi_cluster/openapi.json;  # Assuming Astro app runs on port 4321
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        # Streaming API Endpoint (StreamingResponse)
        location /api/stream/ {
            proxy_pass http://fastapi_cluster/api/stream/;
            proxy_http_version 1.1;            # Ensure HTTP/1.1 for streaming
            proxy_set_header Connection "";    # Prevent connection closure issues
            proxy_buffering off;               # Disable buffering for real-time streaming
            chunked_transfer_encoding on;      # Enable chunked encoding
        }
        # Proxy settings to forward requests to Astro app (serve the front-end)
        location / {
            proxy_pass http://astro-app:4321;  # Assuming Astro app runs on port 4321
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-port 443;
        }
        location /chat {
            proxy_pass http://astro-app:4321/chat;
            proxy_http_version 1.1;            # Ensure HTTP/1.1 for streaming
            proxy_set_header Connection "";    # Prevent connection closure issues
            proxy_buffering off;               # Disable buffering for real-time streaming
            chunked_transfer_encoding on;      # Enable chunked encoding
        }

    }
}
